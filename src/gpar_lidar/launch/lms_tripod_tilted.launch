<?xml version="1.0"?>
<launch>
<arg name="hostname" default="192.168.0.5" />


<node pkg="gpar_mcuserial" type="mcuserial_node" name="mcuserial_node" >
   <param name="serial_port" type="string" value="/dev/ttyACM0"/>
   </node>

   <!-- Frame = k64f_imu -->
  <node pkg="gpar_k64f" type="gpar_k64f_node" name="imu_k64f_node" output="screen" >
   <param name="k64f_frame" type="string" value="map"/>
   <param name="k64f_child_frame" type="string" value="tripe"/>
   </node>

 <node pkg="tf2_ros" type="static_transform_publisher" name="static_tripe_lidar1" args="0.07 0 0 0 0 1.57 tripe cloud" />
 <node pkg="tf2_ros" type="static_transform_publisher" name="static_tripe_lidar2" args="0 0 0.1 0 0 0 cloud imu" />



<!--  <node pkg="tf2_ros" type="static_transform_publisher" name="static_cloud_imu" args="0.0 0 0.1 0 0 0 cloud imu_child" /> -->

 



 
  <!-- start the actual driver node -->
  
<!-- launch file for the lms_5xx series -->
  <node name="sick_lms_5xx" pkg="sick_scan" type="sick_generic_caller"  respawn="false" output="screen">
  <!--<param name="robot_description" command="$(find xacro)/xacro.py '$(find sick_scan)/urdf/example.urdf.xacro'" />-->

    <!-- default values: -->
    <!--
      <param name="min_ang" type="double" value="-1.658062789" />
      <param name="max_ang" type="double" value="1.658062789" />
      <param name="intensity" type="bool" value="True" />
      <param name="skip" type="int" value="0" />
      <param name="frame_id" type="str" value="laser" />
      <param name="time_offset" type="double" value="-0.001" />
      <param name="publish_datagram" type="bool" value="False" />
      <param name="subscribe_datagram" type="bool" value="false" />
      <param name="device_number" type="int" value="0" />
      <param name="range_min" type="double" value="0.05" />
    -->
    <param name="frame_id" type="str" value="cloud" />
    <param name="scanner_type" type="string" value="sick_lms_5xx" />
    <!-- -95° -->
    <param name="min_ang" type="double" value="-1.658062789" />
    <!-- 95° -->
    <param name="max_ang" type="double" value="1.658062789" />
    <param name="range_max" type="double" value="100.0" />
    <param name="intensity" type="bool" value="true" />
    <param name="intensity_resolution_16bit" type="bool" value="false" />
    <param name="hostname" type="string" value="$(arg hostname)" />
    <param name="port" type="string" value="2112" />
    <param name="timelimit" type="int" value="5" />
    <param name="use_binary_protocol" type="bool" value="true"/>
    <!-- possible angular resolutions are 1,0.6667,0.5,0.3333,0.25,0.1667
	 possible scan frequencies are 25,35,50,75,100 Hz
	 Make sure to check in the manual whether the desired scanning frequency
	 and angular resolution combination is available. 
	 The parameters scan_freq and ang_res must always be used together.    
    <param name="ang_res" type="double" value="0.1667" />
    <param name="scan_freq" type="double" value="25" />  
--> 

  </node>

  <node name="cloud_controller_lms" pkg="gpar_lidar" type="cloud_controller_lms" output="screen">
    <param name="input_cloud" type="str" value="cloud" />
   </node>

      <node name="rviz" pkg="rviz" type="rviz" required="true"
      args="-d $(find gpar_lidar)/rviz/lms_plot.rviz" /> 

<!--
 <node pkg="rosbag" type="record" name="rosbag_record_scan"
	 args="-o /home/marcus/drone_scan /cloud /tf /tf_static" />
-->


</launch>
