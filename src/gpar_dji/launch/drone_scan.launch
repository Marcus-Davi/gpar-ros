<?xml version="1.0"?>
<launch>
    <node pkg="dji_sdk" type="dji_sdk_node" name="dji_sdk" output="screen" respawn="true">
    <!-- node parameters -->
    <param name="serial_name" type="string" value="/dev/ttyS1"/>
    <param name="baud_rate" type="int" value="230400"/>
    <param name="app_id" type="int" value="1073792"/>
    <param name="app_version" type="int" value="1"/>
    <param name="align_time" type="bool" value="false"/>
    <param name="enc_key" type="string" value="49f507cdc0209ecf18cb6b1ee32408bff3e58e82214f664e893a3de70a523662"/>
    <param name="use_broadcast" type="bool" value="false"/>
    </node>

  <!-- Lidar Position on Drone 1.57079632679 -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="baselink_to_drone" args="0 0 0 0 1.50 0 drone ldmrs_mount_link" />
  <!-- Lidar Position On Link -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="static_ldmrs_link" args="0.044 0.02325 0 0 0 0 ldmrs_mount_link ldmrs" />

  <!-- Gets attitude information and converts to transforms -->
<node pkg="gpar_dji" type="telemetry" name="telemetry" output="screen" />

  <!-- Tracks information from MSDK and process them -->
 <node pkg="gpar_dji" type="mobile_comm" name="mobile_comm_parser" /> 


  <!-- Cloud manager service -->
 <node pkg="gpar_lidar" name="cloud_controller" type="cloud_controller" output="screen">
    <param name="input_cloud" type="str" value="cloud_ldmrs" />
   </node>

  <!-- start the actual driver node -->
  <node name="sick_ldmrs_node" pkg="sick_ldmrs_driver" type="sick_ldmrs_node" output="screen" respawn="true">
    <param name="hostname" type="str" value="192.168.0.1" />
    <!-- change frequency to 12.5 Hz so that the scanner outputs object tracking results -->
    <param name="scan_frequency" type="int" value="1" /> 
  <!--  <param name="angular_resolution_type" type="int" value="1" />  
    <param name="contour_point_density" type="int" value="2" /> 
    <param name="sensitivity_control" type="bool" value="True" />

 
    <param name="flexres_resolution1" type="int" value="4" />
    <param name="flexres_start_angle1" type="double" value="-1.0" />
    <param name="flexres_start_angle2" type="double" value="-0.90" />
    <param name="flexres_start_angle3" type="double" value="-0.80" />
    <param name="flexres_start_angle4" type="double" value="-0.70" />
    <param name="flexres_start_angle5" type="double" value="-0.60" />
    <param name="flexres_start_angle6" type="double" value="-0.50" />
    <param name="flexres_start_angle7" type="double" value="-0.40" />
    <param name="flexres_start_angle8" type="double" value="-0.3" /> -->

  </node>

  <!-- salva leituras num arquivo .bag 
  <node pkg="rosbag" type="record" name="rosbag_record_scan"
   args="record -o /home/linaro/drone_scan /cloud_ldmrs /tf /tf_static" />
 -->
  <!-- roda mission waypoint -->
    <node pkg="gpar_dji" type="waypoints" name="waypoints" output="screen" respawn="true"/>

      <!-- Roda Supervisor -->
  <node pkg="gpar_dji" type="waypoints_supervisor" name="waypoints_supervisor" output="screen" respawn="true"/>


  <!-- upload the robot_description URDF (in this demo, the "robot" is only the LD-MRS) 
  <include file="$(find sick_ldmrs_description)/launch/upload_urdf.launch" /> -->

  <!-- start an aggregator for the diagnostics info from the driver node 
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
    <rosparam command="load" file="$(find sick_ldmrs_driver)/config/analyzers.yaml" />
  </node> -->

  <!-- publish TF 
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher" /> -->
</launch>

